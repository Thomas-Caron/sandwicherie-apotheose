{"version":3,"sources":["assets/images/logo-brand.png","serviceWorker.js","components/Login/index.js","containers/Login/index.js","actions/log.js","components/Header/index.js","actions/header.js","containers/Header/index.js","components/Sidebar/index.js","containers/Sidebar/index.js","components/ProductList/product.js","components/ProductList/categories.js","components/ProductList/index.js","containers/ProductList/index.js","actions/product.js","components/CommandList/command.js","components/CommandList/archivate.js","components/CommandList/index.js","containers/CommandList/index.js","actions/command.js","components/App/index.js","containers/App/index.js","reducers/login.js","reducers/header.js","reducers/sidebar.js","reducers/product.js","reducers/command.js","reducers/index.js","middlewares/productMiddleware.js","middlewares/commandMiddleware.js","middlewares/logMiddleware.js","middlewares/openCloseMiddleware.js","store/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Login","getLogin","errorLog","username","password","setPasswordValue","setUsernameValue","className","onSubmit","e","preventDefault","src","brand","alt","value","onChange","target","type","placeholder","connect","state","login","dispatch","Header","getLogout","getStatus","modifyStatus","editStatus","status","isOpen","useEffect","onClick","saveStatus","bool","header","Sidebar","links","map","link","key","id","to","path","activeClassName","exact","icon","name","sidebar","Product","productCurrent","console","log","picture","category","description","price","Checkbox","toggle","class","Categories","categories","products","result","filter","product","ProductList","getProduct","getCategories","ownprops","listProduct","listCategories","Command","getCommand","commands","command","user","firstname","lastname","email","phoneNumber","orderLines","order","quantity","comment","Archivate","CommandList","listCommand","App","isLogged","component","initialState","action","combineReducers","productMiddleware","store","next","axios","get","then","response","data","catch","error","commandMiddleware","logMiddleware","getState","post","reponse","openCloseMiddleware","put","enhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3feb05ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-brand.f8d6ce72.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//! == Import : npm ==\nimport React from 'react';\n\n//! == Import : local ==\nimport brand from '../../assets/images/logo-brand.png';\nimport './styles.scss';\n\n//! == Composant ==\nconst Login = ({ getLogin, errorLog, username, password, setPasswordValue, setUsernameValue }) => {\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        getLogin();\n    };\n\n    const hangleUsernameOnChange = (e) => {\n        setUsernameValue(e.target.value);\n    }\n    const handlePasswordOnChange = (e) => {\n        setPasswordValue(e.target.value);\n    }\n    return (\n        <div className=\"login\">\n            <form className=\"login__form\" onSubmit={handleSubmit}>\n                <img src={brand} alt=\"brand\" className=\"login__brand\"/>\n                <input \n                    value={username}\n                    onChange={hangleUsernameOnChange} \n                    type=\"text\" \n                    className=\"login__email\" \n                    placeholder=\"User\"\n                />\n                <input \n                    value={password}\n                    onChange={handlePasswordOnChange} \n                    type=\"password\" \n                    className=\"login__password\" \n                    placeholder=\"Password\"\n                />\n                <p className={errorLog ? \"login__error\" : \"login__error--none\"}>Votre nom d'utilisateur ou votre mot de passe est incorrecte</p>\n                <button type=\"submit\" className=\"login__submit\" >Se connecter</button>\n            </form>\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Login;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Login from '../../components/Login';\nimport { getLogin, setUsernameValue, setPasswordValue } from '../../actions/log';\n\nconst mapStateToProps = (state) => ({\n    username: state.login.username,\n    password: state.login.password,\n    errorLog: state.login.errorLog,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getLogin: () => dispatch(getLogin()),\n    setUsernameValue: (username) => dispatch (setUsernameValue(username)),\n    setPasswordValue: (password) => dispatch (setPasswordValue(password)),\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","// ACTION TYPE\nexport const GET_LOGIN = 'GET_LOGIN';\nexport const GET_LOGGED = 'GET_LOGGED';\nexport const CHECK_IS_LOGGED = 'CHECK_IS_LOGGED';\nexport const ERROR_LOGGED = 'ERROR_LOGGED';\nexport const GET_LOGOUT = 'GET_LOGOUT';\nexport const SET_USERNAME_VALUE = 'SET_USERNAME_VALUE';\nexport const SET_PASSWORD_VALUE = 'SET_PASSWORD_VALUE';\n\n// ACTION CREATOR\nexport const getLogin = () => ({\n  type: GET_LOGIN,\n});\n\nexport const getLogged = () => ({\n  type: GET_LOGGED,\n});\n\nexport const checkIsLogged = () => ({\n  type: CHECK_IS_LOGGED,\n});\n\nexport const errorLogged = () => ({\n  type: ERROR_LOGGED,\n});\n\nexport const getLogout = () => ({\n  type: GET_LOGOUT,\n});\n\nexport const setUsernameValue = (username) => ({\n  type: SET_USERNAME_VALUE,\n  username,\n});\n\nexport const setPasswordValue = (password) => ({\n  type: SET_PASSWORD_VALUE,\n  password\n});\n","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Header = ({ getLogout, getStatus, modifyStatus, editStatus, status, isOpen }) => {\n   useEffect(() => { getStatus(); });\n   const handleLogout = () => {\n      getLogout();\n   };\n   const handleEditStatus = () => {\n      if (status === 'FERMÉ') {\n         modifyStatus('OUVERT', true);\n      } else if (status === 'OUVERT') {\n         modifyStatus('FERMÉ', false);\n      }\n      editStatus();\n   }\n   return (\n      <header className=\"header\">\n         <h1 className=\"header__title\">\n            MESSIEURS CROQUENT - BackOffice\n         </h1>\n         <button className={isOpen ? \"header__open\" : \"header__close\"} onClick={handleEditStatus}>\n            <i className=\"fa fa-clock\"></i>\n            {isOpen ? \"OUVERT\" : \"FERMÉ\"}\n         </button>\n         <button className=\"header__logout\" onClick={handleLogout}>\n               <i className=\"fas fa-power-off\"></i>\n               Logout\n         </button>\n      </header>\n   );\n};\n\n//! == Export ==\nexport default Header;","// ACTION TYPE\nexport const GET_LOGOUT = 'GET_LOGOUT';\nexport const EDIT_STATUS = 'EDIT_STATUS';\nexport const GET_STATUS = 'GET_STATUS';\nexport const SAVE_STATUS = 'SAVE_STATUS';\nexport const MODIFY_STATUS = 'MODIFY_STATUS';\n\n// ACTION CREATOR\nexport const getLogout = () => ({\n  type: GET_LOGOUT,\n});\n\nexport const editStatus = () => ({\n    type: EDIT_STATUS,\n  });\n\n  export const getStatus = () => ({\n    type: GET_STATUS,\n  });\n\n  export const saveStatus = (status, bool) => ({\n    type: SAVE_STATUS,\n    status,\n    bool,\n  });\n\n  export const modifyStatus = (status, bool) => ({\n    type: MODIFY_STATUS,\n    status,\n    bool,\n  });","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Header from '../../components/Header';\nimport { getLogout, getStatus, editStatus, modifyStatus } from '../../actions/header';\n\nconst mapStateToProps = (state) => ({\n    isOpen: state.header.isOpen,\n    status: state.header.status,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getLogout: () => dispatch(getLogout()),\n    getStatus: () => dispatch(getStatus()),\n    editStatus: () => dispatch(editStatus()),\n    modifyStatus: (status, bool) => dispatch(modifyStatus(status, bool)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","//! == Import : npm ==\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { bubble as Menu } from 'react-burger-menu';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Sidebar = ({ links }) => (\n    <Menu>\n        {links.map((link) => (\n            <NavLink\n                key={link.id}\n                to={link.path}\n                activeClassName=\"bm-item-selected\"\n                exact\n            >\n                    <i className={link.icon}></i>\n                    <span className=\"bm-item-link\">{link.name}</span>\n            </NavLink>\n        ))}\n    </Menu>\n);\n\n//! == Export ==\nexport default Sidebar;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport Sidebar from '../../components/Sidebar';\n\nconst mapStateToProps = (state) => ({\n    links: state.sidebar.links,\n});\n\nconst mapDispatchToProps = (dispatch) => {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","//! == Import : npm ==\nimport React from 'react';\nimport { Checkbox } from 'semantic-ui-react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Product = ({ productCurrent }) => {\n    console.log(productCurrent)\n    return (\n        <tr className=\"product__tr\">\n            <td className=\"product__image--td\">\n                <img className=\"product__image\" src={productCurrent.picture} alt=\"croque\"></img>\n            </td>\n            <td className=\"product__dish--td\">\n                <p className=\"product__dish\">{productCurrent.name}</p>\n            </td>\n            <td className=\"product__category--td\">\n                <p className=\"product__category\">{productCurrent.category.name}</p>\n            </td>\n            <td className=\"product__description--td\">\n                <p className=\"product__description\">{productCurrent.description}</p>\n            </td>\n            <td className=\"product__price--td\">\n                <p className=\"product__price\">{productCurrent.price}€</p>\n            </td>\n            <td className=\"product__satus--td\">\n                <Checkbox onClick={() => (console.log('coucou'))} toggle className=\"product__status\"/>\n            </td>\n            <td className=\"product__delete--td\">\n                <button className=\"product__delete\">\n                    <i class=\"fas fa-trash-alt\"></i>\n                </button>\n            </td>\n        </tr>\n    );\n};\n\n//! == Export ==\nexport default Product;\n","//! == Import : npm ==\nimport React from 'react';\n\n//! == Import : local ==\nimport Product from './product';\nimport './styles.scss';\n\n//! == Composant ==\nconst Categories = ({ categories, products }) => {\n    return (\n        <div className=\"product__container\">\n            {categories.map((category) => {\n                const result = products.filter(product => product.category.id === category.id);\n                return (\n                    <div className=\"product__byCategory\" key={category.id}>\n                        <p className=\"product__titleCategory\">{category.name}</p>\n                        <table>\n                            <thead>\n                                <tr className=\"product__tr\">\n                                    <td className=\"product__image--td\">\n                                        <p className=\"product__image--th\">Image</p>\n                                    </td>\n                                    <td className=\"product__dish--td\">\n                                        <p className=\"product__dish--th\">Produit</p>\n                                    </td>\n                                    <td className=\"product__category--td\">\n                                        <p className=\"product__category--th\">Catégorie</p>\n                                    </td>\n                                    <td className=\"product__description--td\">\n                                        <p className=\"product__description--th\">Description</p>\n                                    </td>\n                                    <td className=\"product__price--td\">\n                                        <p className=\"product__price--th\">Prix</p>\n                                    </td>\n                                    <td className=\"product__status--td\">\n                                        <p className=\"product__status--th\">Statut</p>\n                                    </td>\n                                    <td className=\"product__delete--td\">\n                                        <p className=\"product__delete--th\">Supprimer</p>\n                                    </td>\n                                </tr>\n                            </thead>\n                            {result.map((productCurrent) => (\n                                <tbody key={productCurrent.id}>\n                                    <Product productCurrent={productCurrent} />\n                                </tbody>\n                            ))}\n                        </table> \n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Categories;\n","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport Categories from './categories';\nimport './styles.scss';\n\n//! == Composant ==\nconst ProductList = ({ products, getProduct, categories, getCategories }) => {\n    useEffect(() => { \n        getProduct();\n        getCategories();\n     }, []);\n    return (\n        <main className=\"product\">\n            <h1 className=\"product__title\">Modifier ou supprimer des produits</h1>\n            <Categories \n                categories={categories}\n                products={products}\n            />\n        </main>\n    );\n};\n\n//! == Export ==\nexport default ProductList;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport ProductList from '../../components/ProductList';\nimport { getProduct, getCategories } from '../../actions/product';\n\n\nconst mapStateToProps = (state, ownprops) => ({\n    products: state.product.listProduct,\n    categories: state.product.listCategories,\n});\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n    getProduct: () => dispatch(getProduct()),\n    getCategories: () => dispatch(getCategories()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","// ACTION TYPE\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const SAVE_PRODUCT = 'SAVE_PRODUCT';\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\nexport const SAVE_CATEGORIES = 'SAVE_CATEGORIES';\n\n// ACTION CREATOR\nexport const getProduct = () => ({\n    type: GET_PRODUCT,\n  });\n\n  export const saveProduct = (product) => ({\n    type: SAVE_PRODUCT,\n    product\n  });\n\n  export const getCategories = () => ({\n    type: GET_CATEGORIES,\n  });\n\n  export const saveCategories = (categories) => ({\n    type: SAVE_CATEGORIES,\n    categories\n  });","//! == Import : npm ==\nimport React, { useEffect } from 'react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Command = ({ getCommand, commands }) => {\n    useEffect(() => { getCommand(); }, []);\n    return (\n        <div className=\"command\">\n            {commands.map((command) => (\n                <div className=\"command__container\">\n                    <p className=\"command__number\">Commande n°{command.id}</p>\n                    <p className=\"command__infosUser\">Informations du client :</p>\n                    <div className=\"command__user\">\n                        <p className=\"command__infos\">Prénom: {command.user.firstname}</p>\n                        <p className=\"command__infos\">Nom: {command.user.lastname}</p>\n                        <p className=\"command__infos\">Email: {command.user.email}</p>\n                        <p className=\"command__infos\">Téléphone: {command.user.phoneNumber}</p>\n                    </div>\n                    <p className=\"command__infosCommand\">Détail de la commande :</p>\n                    {command.orderLines.map((order) => (\n                        <p className=\"command__detail\">{order.quantity} -{order.product.name}</p>\n                    ))}\n                    <p className=\"command__infosComment\">Commentaire :</p>\n                    <p className=\"command__comment\">{command.comment}</p>\n                    <p className=\"command__infosPrice\">Prix total de la commande :</p>\n                    <p className=\"command__price\">{command.price} &euro;</p>\n                </div>\n            ))}\n        </div>\n    );\n};\n\n//! == Export ==\nexport default Command;\n","//! == Import : npm ==\nimport React from 'react';\n\n//! == Import : local ==\nimport './styles.scss';\n\n//! == Composant ==\nconst Archivate = () => (\n    <div className=\"archivate\">\n        \n    </div>\n);\n\n//! == Export ==\nexport default Archivate;\n","//! == Import : npm ==\nimport React from 'react';\n\n//! == Import : local ==\nimport Command from './command';\nimport Archivate from './archivate';\nimport './styles.scss';\n\n//! == Composant ==\nconst CommandList = ({ getCommand, commands}) => (\n    <main className=\"commandList\">\n        <h1 className=\"commandList__command\">Les commandes en cours</h1>\n        <Command\n            getCommand={getCommand}\n            commands={commands}\n        />\n        <h1 className=\"commandList__archivate\">Les commandes archivées</h1>\n        <Archivate/>\n    </main>\n);\n\n//! == Export ==\nexport default CommandList;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport CommandList from '../../components/CommandList';\nimport { getCommand } from '../../actions/command';\n\n\nconst mapStateToProps = (state, ownprops) => ({\n    commands: state.command.listCommand,\n});\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n    getCommand: () => dispatch(getCommand()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandList);","// ACTION TYPE\nexport const GET_COMMAND = 'GET_COMMAND';\nexport const SAVE_COMMAND = 'SAVE_COMMAND';\n\n// ACTION CREATOR\nexport const getCommand = () => ({\n    type: GET_COMMAND,\n  });\n\n  export const saveCommand = (command) => ({\n    type: SAVE_COMMAND,\n    command\n  });","//! == Import : npm ==\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\n\n//! == Import : local ==\nimport './styles.scss';\nimport Login from '../../containers/Login';\nimport Header from '../../containers/Header';\nimport Sidebar from '../../containers/Sidebar';\nimport ProductList from '../../containers/ProductList';\nimport CommandList from '../../containers/CommandList';\n\n//! == Composant ==\nconst App = ({ isLogged }) => (\n  <div className=\"App\">\n    {!isLogged && (\n      <Login />\n    )}\n    {isLogged && (\n      <>\n        <Header />\n        <Sidebar />\n        <Route exact path=\"/produits\" component={ProductList} />\n        <Route exact path=\"/commandes\" component={CommandList} />\n      </>\n    )}\n  </div>\n);\n\n//! == Export ==\nexport default App;\n","//! == Import : npm\nimport { connect } from 'react-redux';\n\n//! == Import : local (actions)\nimport App from '../../components/App';\n\nconst mapStateToProps = (state) => ({\n    isLogged: state.login.isLogged,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","//! == Import : local (actions)\nimport { GET_LOGIN, CHECK_IS_LOGGED, ERROR_LOGGED, SET_USERNAME_VALUE, SET_PASSWORD_VALUE, GET_LOGGED} from '../actions/log';\nimport { GET_LOGOUT } from '../actions/header';\n\n//! == Initial state\nexport const initialState = {\n    errorLog: false,\n    isLogged: false,\n    username: '',\n    password: ''\n};\n\n//! == Actions to modified state\nconst login = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case GET_LOGIN:\n           return {\n                ...state,\n            };\n        case GET_LOGGED:\n            return {\n                ...state,\n            };\n        case CHECK_IS_LOGGED:\n            return {\n                ...state,\n                isLogged: true,\n                errorLog: false,\n            }\n        case ERROR_LOGGED:\n            return {\n                ...state,\n                errorLog: true\n            }\n        case GET_LOGOUT:\n            return {\n                ...state,\n                isLogged: false,\n            }\n        case SET_USERNAME_VALUE:\n            return {\n                ...state,\n                username: action.username\n            }\n        case SET_PASSWORD_VALUE:\n            return {\n                ...state,\n                password: action.password\n            }\n        default:\n           return state;\n     }\n};\n\nexport default login;","//! == Import : local (actions)\nimport { MODIFY_STATUS, SAVE_STATUS } from '../actions/header';\n\n//! == Initial state\nexport const initialState = {\n    isOpen: '',\n    status: '',\n};\n\n//! == Actions to modified state\nconst header = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case MODIFY_STATUS:\n            return {\n                ...state,\n                status: action.status,\n                isOpen: action.bool\n            }\n        case SAVE_STATUS:\n            return {\n                ...state,\n                status: action.status,\n                isOpen: action.bool,\n            }\n        default:\n           return state;\n     }\n};\n\nexport default header;","//! == Import : local (actions)\n\n//! == Initial state\nexport const initialState = {\n    links: [\n        {\n           id: 1,\n           name: 'Accueil',\n           path: '/',\n           icon: 'fas fa-home',\n        },\n        {\n            id: 2,\n            name: 'Produits',\n            path: '/produits',\n            icon:'fas fa-box'\n         },\n         {\n            id: 3,\n            name: 'Commandes',\n            path: '/commandes',\n            icon:'fas fa-shopping-cart',\n         },\n    ],\n};\n\n//! == Actions to modified state\nconst sidebar = (state = initialState, action = {}) => {\n    return state;\n};\n\nexport default sidebar;","//! == Import : local (actions)\nimport { SAVE_PRODUCT, SAVE_CATEGORIES } from '../actions/product';\n\n//! == Initial state\nexport const initialState = {\n    listProduct: [],\n    listCategories: [],\n}\n\n//! == Actions to modified state\nconst product = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SAVE_PRODUCT:\n        return {\n            ...state,\n            listProduct: action.product,\n        };\n        case SAVE_CATEGORIES:\n        return {\n            ...state,\n            listCategories: action.categories,\n        };\n        default:\n            return state;\n    }\n    \n};\n\nexport default product;","//! == Import : local (actions)\nimport { SAVE_COMMAND } from '../actions/command';\n\n//! == Initial state\nexport const initialState = {\n    listCommand: [],\n}\n\n//! == Actions to modified state\nconst product = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case SAVE_COMMAND:\n        return {\n            ...state,\n            listCommand: action.command,\n        };\n        default:\n            return state;\n    }\n    \n};\n\nexport default product;","//! == Import : npm\nimport { combineReducers } from 'redux';\n\n//! == Import : local\nimport login from './login';\nimport header from './header';\nimport sidebar from './sidebar';\nimport product from './product';\nimport command from './command';\n\nexport default combineReducers({\n  login,\n  header,\n  sidebar,\n  product,\n  command,\n});","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { GET_PRODUCT, saveProduct, GET_CATEGORIES, saveCategories } from '../actions/product';\n\n//! == Utils Axios for recupered JSON via API\nconst productMiddleware = (store) => (next) => (action) => {\n  switch (action.type) {\n    case GET_PRODUCT:\n      axios.get('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/products')\n        .then((response) => {\n          store.dispatch(saveProduct(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      break;\n    case GET_CATEGORIES:\n      axios.get('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/categories')\n        .then((response) => {\n          store.dispatch(saveCategories(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      break;\n    default:\n      next(action);\n      break;\n  }\n};\n\nexport default productMiddleware;","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { GET_COMMAND, saveCommand } from '../actions/command';\n\n//! == Utils Axios for recupered JSON via API\nconst commandMiddleware = (store) => (next) => (action) => {\n  switch (action.type) {\n    case GET_COMMAND:\n      axios.get('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/order')\n        .then((response) => {\n          console.log(response.data, \"response\");\n          store.dispatch(saveCommand(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      break;\n    default:\n      next(action);\n      break;\n  }\n};\n\nexport default commandMiddleware;","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { GET_LOGIN, GET_LOGGED, GET_LOGOUT, checkIsLogged, errorLogged, getLogged } from '../actions/log';\n//! == Utils Axios for recupered JSON via API\n\nconst logMiddleware = (store) => (next) => (action) => {\n    switch (action.type) {\n        case GET_LOGIN: {\n            const state = store.getState();\n            const { username, password } = state.login;\n\n            axios.post('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/login', {\n                username,\n                password\n            })\n            .then((response) => {\n                store.dispatch(checkIsLogged());\n                store.dispatch(getLogged());\n                console.log(response.data, \"middleware login\");\n            })\n            .catch((error) => {\n                store.dispatch(errorLogged());\n                console.log(error);\n            })\n            break;\n        }\n        case GET_LOGGED:\n        axios.post('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/logged')\n        .then((reponse) => {\n            console.log(reponse.data, 'middleware Logged');\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n        break;\n        // case GET_LOGOUT:\n        // axios.post('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/logout')\n        // .then((reponse) => {\n        //     console.log(reponse, 'ceci est la réponse du LOGOUT')\n        // })\n        // .catch((error) => {\n        //     console.log(error);\n        // })\n        // break;\n    default:\n        next(action)\n        break;\n    }\n}\n\nexport default logMiddleware;","//! == Import : npm\nimport axios from 'axios';\n\n//! == Import : local (actions)\nimport { EDIT_STATUS, GET_STATUS, saveStatus } from '../actions/header';\n//! == Utils Axios for recupered JSON via API\n\nconst openCloseMiddleware = (store) => (next) => (action) => {\n    switch (action.type) {\n        case EDIT_STATUS: {\n            const state = store.getState();\n            const { status } = state.header;\n            axios.put('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/store/1', {\n                status\n            })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            break;\n        }\n        case GET_STATUS: {\n            axios.get('http://ec2-54-160-78-162.compute-1.amazonaws.com/api/api/store/1')\n            .then((response) => {\n                if (response.data.status === 'OUVERT') {\n                    store.dispatch(saveStatus(response.data.status, true));\n                } else if (response.data.status === 'FERMÉ') {\n                    store.dispatch(saveStatus(response.data.status, false));\n                };\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            break;\n        }\n    default:\n        next(action)\n        break;\n    }\n}\n\nexport default openCloseMiddleware;","//! == Import : npm\nimport { createStore, compose, applyMiddleware } from 'redux';\n\n//! == Import : local\nimport rootReducer from '../reducers';\nimport productMiddleware from '../middlewares/productMiddleware';\nimport commandMiddleware from '../middlewares/commandMiddleware';\nimport logMiddleware from '../middlewares/logMiddleware';\nimport openCloseMiddleware from '../middlewares/openCloseMiddleware';\n\n//! == Enhancers\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancers = composeEnhancers(\n  applyMiddleware(\n    productMiddleware,\n    commandMiddleware,\n    logMiddleware,\n    openCloseMiddleware,\n  ),\n);\n\n//! == Store\nconst store = createStore(\n  rootReducer,\n  //? preloadedState,\n  enhancers,\n);\n\n//! == Export\nexport default store;","//! == Import : npm ==\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n//! == Import : local ==\nimport './styles/index.scss';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './containers/App';\nimport store from './store';\n\n//! == Composant ==\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}